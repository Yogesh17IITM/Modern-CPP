; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30153.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__97D3638F_vcruntime_new@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__244AF085_cstdlib DB 01H
__47F37C5A_xtr1common DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__81812A28_cstddef DB 01H
__589FA321_type_traits DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__7FE5F402_limits DB 01H
__DD5FCA34_compare DB 01H
__12269DE6_xutility DB 01H
__60BC708E_cmath DB 01H
__20BB4341_malloc@h DB 01H
__B0A13A33_vcruntime_exception@h DB 01H
__FF458F76_exception DB 01H
__C69F69CF_tuple DB 01H
__79D216CD_xmemory DB 01H
__374A57BA_xpolymorphic_allocator@h DB 01H
__0D019051_xstring DB 01H
__760BB52B_stdexcept DB 01H
__A4685E82_xcall_once@h DB 01H
__A0B61CF9_time@h DB 01H
__DDB379A0_xthreads@h DB 01H
__14D0A8C0_atomic DB 01H
__1B354CA2_system_error DB 01H
__65ADBEC9_vcruntime_typeinfo@h DB 01H
__62F96EFF_typeinfo DB 01H
__C34BF88C_memory DB 01H
__EF0EAF83_xfacet DB 01H
__B2D2BA86_ctype@h DB 01H
__7D708D37_xlocinfo DB 01H
__D23FE460_xlocale DB 01H
__4495FA24_xiosbase DB 01H
__4CB88277_xlocnum DB 01H
__845859A3_ios DB 01H
__E9FCAEDE_2_Prog_CallingConv@cpp DB 01H
__A2FF0B9E_istream DB 01H
__C12F3EA4_ostream DB 01H
__74AB0D97_streambuf DB 01H
__B30C2184_iosfwd DB 01H
__1347750E_utility DB 01H
__038A2AA6_iterator DB 01H
__E458E21C_xstddef DB 01H
__F54903A0_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?func_1@@YAHHH@Z				; func_1
PUBLIC	?func_2@@YAHHH@Z				; func_2
PUBLIC	?func_3@@YAHHH@Z				; func_3
PUBLIC	?func_4@@YAHHH@Z				; func_4
PUBLIC	?func_5@Vendor@@SAHHH@Z				; Vendor::func_5
PUBLIC	?func_6@Vendor@@QEAAHHH@Z			; Vendor::func_6
PUBLIC	main
PUBLIC	__JustMyCode_Default
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_1@@YAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?func_1@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_2@@YAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?func_2@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_3@@YAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?func_3@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_4@@YAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?func_4@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_5@Vendor@@SAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?func_5@Vendor@@SAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?func_6@Vendor@@QEAAHHH@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?func_6@Vendor@@QEAAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+246
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02aH
	DB	0ddH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	025053119H
	DD	010a230fH
	DD	070030025H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
main$rtcName$0 DB 06fH
	DB	062H
	DB	06aH
	DB	056H
	DB	065H
	DB	06eH
	DB	064H
	DB	06fH
	DB	072H
	DB	00H
	ORG $+6
main$rtcVarDesc DD 044H
	DD	01H
	DQ	FLAT:main$rtcName$0
	ORG $+48
main$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_6@Vendor@@QEAAHHH@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_5@Vendor@@SAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_4@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_3@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_2@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?func_1@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT main
_TEXT	SEGMENT
ret$ = 4
objVendor$ = 36
__$ArrayPad$ = 248
main	PROC						; COMDAT

; 49   : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 50   :     int ret = 0;

	mov	DWORD PTR ret$[rbp], 0

; 51   :     // 'Caller' functions
; 52   :     ret = func_1(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_1@@YAHHH@Z			; func_1
	mov	DWORD PTR ret$[rbp], eax

; 53   :     ret = func_2(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_2@@YAHHH@Z			; func_2
	mov	DWORD PTR ret$[rbp], eax

; 54   :     ret = func_3(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_3@@YAHHH@Z			; func_3
	mov	DWORD PTR ret$[rbp], eax

; 55   :     ret = func_4(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_4@@YAHHH@Z			; func_4
	mov	DWORD PTR ret$[rbp], eax

; 56   :     ret = Vendor::func_5(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_5@Vendor@@SAHHH@Z			; Vendor::func_5
	mov	DWORD PTR ret$[rbp], eax

; 57   : 
; 58   :     Vendor objVendor;
; 59   :     ret = objVendor.func_5(1, 2);

	mov	edx, 2
	mov	ecx, 1
	call	?func_5@Vendor@@SAHHH@Z			; Vendor::func_5
	mov	DWORD PTR ret$[rbp], eax

; 60   :     ret = objVendor.func_6(1, 2);

	mov	r8d, 2
	mov	edx, 1
	lea	rcx, QWORD PTR objVendor$[rbp]
	call	?func_6@Vendor@@QEAAHHH@Z		; Vendor::func_6
	mov	DWORD PTR ret$[rbp], eax

; 61   : 
; 62   :     // Notice in the .asm file, all the stack are cleaned by the 'callee' itself (C++20 compiler)
; 63   : 
; 64   :     return 0;

	xor	eax, eax

; 65   : }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_6@Vendor@@QEAAHHH@Z
_TEXT	SEGMENT
this$ = 224
x$ = 232
y$ = 240
?func_6@Vendor@@QEAAHHH@Z PROC				; Vendor::func_6, COMDAT

; 39   :     int __thiscall func_6(int x, int y) {   

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 40   :         return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 41   :     } // only for C++

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_6@Vendor@@QEAAHHH@Z ENDP				; Vendor::func_6
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_5@Vendor@@SAHHH@Z
_TEXT	SEGMENT
x$ = 224
y$ = 232
?func_5@Vendor@@SAHHH@Z PROC				; Vendor::func_5, COMDAT

; 34   :     static int func_5(int x, int y) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 35   :         return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 36   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_5@Vendor@@SAHHH@Z ENDP				; Vendor::func_5
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_4@@YAHHH@Z
_TEXT	SEGMENT
x$ = 224
y$ = 232
?func_4@@YAHHH@Z PROC					; func_4, COMDAT

; 27   : int __fastcall func_4(int x, int y) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 28   :     return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 29   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_4@@YAHHH@Z ENDP					; func_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_3@@YAHHH@Z
_TEXT	SEGMENT
x$ = 224
y$ = 232
?func_3@@YAHHH@Z PROC					; func_3, COMDAT

; 21   : int __stdcall func_3(int x, int y) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 22   :     return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 23   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_3@@YAHHH@Z ENDP					; func_3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_2@@YAHHH@Z
_TEXT	SEGMENT
x$ = 224
y$ = 232
?func_2@@YAHHH@Z PROC					; func_2, COMDAT

; 17   : int __cdecl func_2(int x, int y) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 18   :     return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 19   : }    // default calling convention in C/C++

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_2@@YAHHH@Z ENDP					; func_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?func_1@@YAHHH@Z
_TEXT	SEGMENT
x$ = 224
y$ = 232
?func_1@@YAHHH@Z PROC					; func_1, COMDAT

; 13   : int func_1(int x, int y) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode

; 14   :     return (x + y);

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx

; 15   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?func_1@@YAHHH@Z ENDP					; func_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\GitHub_Clone_Repository\Modern-CPP\Basic\2_Prog_CallingConv.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E9FCAEDE_2_Prog_CallingConv@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
